Model
 - 앱의 비즈니스 로직에 필요한 데이터 모델을 포함합니다.
 - Room, Retrofit 등과 연관된지 않는 순수 data class이며 실제 필요한 데이터만 가지고 있는다.

Repository
 - 데이터를 가져오고 저장하는 인터페이스와 구현 클래스를 포함합니다. 외부 데이터 소스와의 상호작용을 추상화합니다.
 - UseCase에서 사용할 Repository / 실제 구현체는 Data Layer에 있으며 Domain Layer는 모른다....

Usecases (또는 interactors)
 - 앱의 비즈니스 로직을 구현하는 클래스를 포함합니다. 사용자의 요청에 따라 데이터를 조작하고 도메인 모델을 반환합니다.
 - 1개 이상의 Repository를 받아 비즈니스 로직을 처리하며 하나의 유저 행동에 대한 비즈니스 로직을 가지고 있는 객체
 - 보통은  하나의 UseCase는 하나의 로직을 담당 / UseCase의 이름만 보고도 무엇을 할 지 알게끔 네이밍을 해야한다.
 - 이로 인해 많은 UseCase 클래스가 생긴다는 단점이 있기도 한다.